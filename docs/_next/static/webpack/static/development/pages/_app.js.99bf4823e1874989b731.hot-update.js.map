{"version":3,"file":"static/webpack/static/development/pages/_app.js.99bf4823e1874989b731.hot-update.js","sources":["webpack:///./layouts/index.js","webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { seo } from '../sleepy.config';\nimport Title from '../components/Title';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Baidutongji from '../components/Baidutongji';\nimport { isMobile } from '../utils';\n\n@inject('store')\n@observer\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMobile: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState(() => ({\n      isMobile: isMobile()\n    }));\n  }\n\n  render() {\n    const { children } = this.props;\n    const { isMobile } = this.state;\n    return (\n      <div\n        className=\"wrapper\"\n        style={{\n          '--body-bg': this.props.store.bodyBg\n        }}\n      >\n        <div className={`layout layout-home${isMobile ? ' mobile' : ''}`}>\n          <Title title={seo.title} />\n          <Header />\n          <div className=\"main\">{children}</div>\n          <Footer />\n          <Baidutongji />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport App, { Container } from 'next/app';\nimport Layouts from '../layouts';\nimport { initializeStore } from '../store';\nimport { Provider } from 'mobx-react';\nimport 'normalize.css';\nimport 'github-markdown-css';\nimport 'gitting/dist/gitting.css';\nimport '../styles/index.scss';\n\nexport default class extends App {\n  static async getInitialProps(appContext) {\n    const mobxStore = initializeStore();\n    appContext.ctx.mobxStore = mobxStore;\n    let appProps = await App.getInitialProps(appContext);\n    return {\n      ...appProps,\n      initialMobxState: mobxStore\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    const isServer = !process.browser;\n    this.mobxStore = isServer\n      ? props.initialMobxState\n      : initializeStore(props.initialMobxState);\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n    return (\n      <Container>\n        <Provider store={this.mobxStore}>\n          <Layouts>\n            <Component {...pageProps} />\n          </Layouts>\n        </Provider>\n      </Container>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AACA;AAAA;AACA;AADA;AAAA;AAGA;;;AAEA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAjCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAEA;;;;;;AACA;AACA;;AACA;AACA;;AADA;AAEA;AACA;;;;;;;;;;;;;;;;;;;AAIA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAHA;AAMA;AACA;;;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA9BA;AACA;;;;;A","sourceRoot":""}